esphome:
  name: fancontrol
  platform: ESP8266
  board: d1_mini_pro
  includes: 
    - ITHO/c1101.h
  libraries: 
    - https://github.com/CoMPaTech/esphome_itho.git

wifi:
  ssid: "secret"
  password: "evenmoresecret"

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: 'fan'

ota:
  password: 'fan'

switch:
- platform: custom
  lambda: |-
    auto fansendjoin = new FanSendIthoJoin();
    App.register_component(fansendjoin);
    return {fansendjoin};
  switches:
    name: "FanSendJoin"
- platform: template
  id: update_fan_speed
  optimistic: True
  turn_on_action:
    then:
      - delay: 200ms
      - if:
          condition:
              text_sensor.state: 
                id: fanspeed
                state: "Off"
          then:
            - fan.turn_off: mech_fan
      - if:
          condition:
              text_sensor.state: 
                id: fanspeed
                state: "Low"
          then:
            - fan.turn_on:
                id: mech_fan
                speed: LOW
      - if:
          condition:
              text_sensor.state: 
                id: fanspeed
                state: "Medium"
          then:
            - fan.turn_on:
                id: mech_fan
                speed: MEDIUM
      - if:
          condition:
              text_sensor.state: 
                id: fanspeed
                state: "Full"
          then:
            - fan.turn_on:
                id: mech_fan
                speed: HIGH
      - switch.turn_off: update_fan_speed

output:
  - platform: custom
    type: float
    outputs:
      id: fanoutput
    lambda: |-
      auto mech_fan = new FanOutput();
      App.register_component(mech_fan);
      return {mech_fan};

text_sensor:
- platform: custom
  lambda: |-
    auto fanrecv = new FanRecv();
    App.register_component(fanrecv);
    return {fanrecv->fanspeed};

  text_sensors:
    name: "FanSpeed"
    id: fanspeed

fan:
  - platform: speed
    output: fanoutput
    id: mech_fan
    name: "Fan"

